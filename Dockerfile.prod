# Multi-stage build para produção
FROM ruby:3.1-slim AS base

# Instalar dependências do sistema
RUN apt-get update -qq && apt-get install -y \
    build-essential \
    libpq-dev \
    nodejs \
    npm \
    curl \
    gnupg \
    libyaml-dev \
    libffi-dev \
    libgdbm-dev \
    libreadline-dev \
    libssl-dev \
    zlib1g-dev \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update -qq && apt-get install -y yarn \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário não-root para segurança
RUN groupadd -r rails && useradd -r -g rails rails

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY Gemfile Gemfile.lock ./

# Instalar gems em estágio separado para cache
FROM base AS gems
RUN bundle config set --local without 'development test' \
    && bundle install --jobs 4 --retry 3

# Copiar código da aplicação
FROM base AS app
COPY --from=gems /usr/local/bundle /usr/local/bundle
COPY . .

# Configurar permissões
RUN chown -R rails:rails /app \
    && chmod +x /app/docker/entrypoint.sh

# Mudar para usuário não-root
USER rails

# Configurar variáveis de ambiente para produção
ENV RAILS_ENV=production
ENV NODE_ENV=production
ENV RAILS_SERVE_STATIC_FILES=true
ENV RAILS_LOG_TO_STDOUT=true

# Expor porta
EXPOSE 3000

# Entrypoint
ENTRYPOINT ["/app/docker/entrypoint.sh"]

# Comando padrão
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]
